service: Topic
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  environment:
    ACCESS_KEY: ${process.env.ACCESS_KEY}
    SECRET_KEY: ${process.env.SECRET_KEY}
    API_KEY: ${process.env.API_KEY}

  iamRoleStatements:
  - Effect: Allow
    Action:
        - lambda:InvokeFunction
    Resource: "*"

  - Effect: Allow
    Action:
      - sns:CreateTopic
      - sns:SetTopicAttributes
      - sns:ListTopics
      - sns:Publish
      - sns:Subscribe
      - sns:ListSubscriptionsByTopic
      - sns:GetTopicAttributes
      - sns:DeleteTopic
    Resource: "*"

  - Effect: Allow
    Action:
      - sqs:CreateQueue
      - sqs:SetQueueAttributes
      - sqs:ListQueues
      - sqs:SendMessage
      - sqs:DeleteQueue
      - sqs:ReceiveMessage
      - sqs:DeleteMessage
    Resource: "*"

  - Effect: Allow
    Action:
      - ses:SendEmail
      - ses:SendRawEmail
    Resource: "*"

  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
      - dynamodb:CreateTable
      - dynamodb:ListTables 
      - dynamodb:DeleteTable
    Resource: "*"


  - Effect: Allow
    Action:
      - dynamodb:DescribeTable
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
      - dynamodb:DeleteTable
      - dynamodb:DescribeTable
      - dynamodb:CreateTable
    Resource: "arn:aws:dynamodb:us-east-1:076593849243:table/OrderListTable1" 

  
functions:
  create-order:
    handler: orderCreation.handler
    events:
      - httpApi:
          path: /createOrder
          method: post
  
  create-table:
    handler: CreateTable.handler
    events:
      - httpApi:
          path: /createTable
          method: post

  order-processing:
    handler: orderProcessing.handler

  create-Table:
    handler: dynamoDbConfig.handler

  get-Notification:
    handler: Extras/getNotifications.handler
    events:
      - httpApi:
          path: /getNoti
          method: get

  fetch-data:
    handler: Extras/FetchData.handler
    events:
      - httpApi:
          path: /fetchData
          method: get

  fetch-tables:
    handler: ListTables.handler
    events:
      - httpApi:
          path: /fetchTables
          method: get

  delete-data:
    handler: Extras/DeleteData.handler
    events:
      - httpApi:
          path: /DeleteData
          method: delete
          
  # order-processing:
  #   handler: Extras/orderProcessing.handler
  #   events:
  #     - httpApi:
  #         path: /processOrder
  #         method: get

  get-queue-messages:
    handler: Extras/getQueueMessages.handler
    events:
      - httpApi:
          path: /getQueueMessages
          method: get
  
  get-topics:
    handler: Extras/getTopic.handler
    events:
      - httpApi:
          path: /getTopic
          method: get
  
  get-queues:
    handler: Extras/getQueue.handler
    events:
      - httpApi:
          path: /getQueue
          method: get

  delete-queues:
    handler: Extras/deleteQueue.handler
    events:
      - httpApi:
          path: /deleteQueue
          method: delete
  
  delete-topic:
    handler: Extras/deleteTopic.handler
    events:
      - httpApi:
          path: /deleteTopic
          method: delete
  
  get-subcriber-list:
    handler: Extras/getSubscriber.handler
    events:
      - httpApi:
          path: /getSubscriber
          method: get

  create-queue:
    handler: Extras/createQueue.handler
    events:
      - httpApi:
          path: /createQueue
          method: post
  
  create-topic:
    handler: Extras/createTopic.handler
    events:
      - httpApi:
          path: /createTopic
          method: post
